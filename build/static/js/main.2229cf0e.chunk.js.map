{"version":3,"sources":["index.js"],"names":["soundBank","keyCode","keyTrigger","desc","url","DrumPad","props","audioHandler","React","createRef","onDrumPadClick","bind","onKeyDown","text","this","padItem","replace","audio","current","updateDisplayText","currentTime","play","e","document","addEventListener","removeEventListener","className","id","onClick","src","ref","Component","App","state","displayText","setState","map","item","idx","href","ReactDOM","render","getElementById"],"mappings":"oOAkCMA,EAAY,CAClB,CACIC,QAAS,GACTC,WAAY,IACZC,KAAM,WACNC,IAAK,yFACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,aACNC,IAAK,0FACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,eACNC,IAAK,gGACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,YACNC,IAAK,0FACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,eACNC,IAAK,2FACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,cACNC,IAAK,kGACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,YACNC,IAAK,mGACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,iBACNC,IAAK,uFACN,CACCH,QAAS,GACTC,WAAY,IACZC,KAAM,QACNC,IAAK,4FAGHC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,aAAeC,IAAMC,YAC1B,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBALF,E,kDAQnB,WACI,IAAME,EAAOC,KAAKR,MAAMS,QAAQZ,KAAKa,QAAQ,KAAK,KAC5CC,EAAQH,KAAKP,aAAaW,QAEhCJ,KAAKR,MAAMa,kBAAkBN,GAC7BI,EAAMG,YAAc,EACpBH,EAAMI,S,uBAGV,SAAUC,GACFA,EAAErB,UAAYa,KAAKR,MAAMS,QAAQd,SACjCa,KAAKJ,mB,+BAIb,WACIa,SAASC,iBAAiB,UAAWV,KAAKF,a,kCAG9C,WACIW,SAASE,oBAAoB,UAAWX,KAAKF,a,oBAGjD,WACI,IAAMG,EAAUD,KAAKR,MAAMS,QAE3B,OACI,sBAAKW,UAAU,WAAWC,GAAIZ,EAAQZ,KAAMyB,QAASd,KAAKJ,eAA1D,UACI,uBAAOgB,UAAU,OAAOC,GAAIZ,EAAQb,WAAY2B,IAAKd,EAAQX,IAAK0B,IAAKhB,KAAKP,eAC3EQ,EAAQb,kB,GAtCHM,IAAMuB,WAiDtBC,E,kDACF,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IAKD2B,MAAQ,CACTC,YAAa,KAGjB,EAAKf,kBAAoB,EAAKA,kBAAkBR,KAAvB,gBAVX,E,qDAalB,SAAkBE,GACdC,KAAKqB,SAAS,CACVD,YAAarB,M,oBAKrB,WAAS,IAAD,OAIJ,OACI,sBAAKa,UAAU,YAAYC,GAAG,eAA9B,UACI,8BACI,oBAAID,UAAU,QAAd,4BAEJ,qBAAKA,UAAU,eAAeC,GAAG,UAAjC,SACI,6BAAKb,KAAKmB,MAAMC,gBAEpB,qBAAKR,UAAU,YAAf,SAEQ1B,EAAUoC,KAAI,SAACC,EAAKC,GAChB,OAAO,cAACjC,EAAD,CAEHU,QAASsB,EACTlB,kBAAmB,EAAKA,mBAFnBmB,QAOrB,sBAAKX,GAAG,SAASD,UAAU,SAA3B,gBAAuC,mBAAGA,UAAU,OACpDa,KAAK,gCADkC,kC,GA5CrC/B,IAAMuB,WAqDxBS,IAASC,OACL,cAACT,EAAD,IACAT,SAASmB,eAAe,W","file":"static/js/main.2229cf0e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/*\nUser Story #1: I should be able to see an outer container with a corresponding id=\"drum-machine\" that contains all other elements.\n\nUser Story #2: Within #drum-machine I can see an element with a corresponding id=\"display\".\n\nUser Story #3: Within #drum-machine I can see 9 clickable drum pad elements, each with a class name of drum-pad, a unique id that describes the audio clip the drum pad will be set up to trigger, and an inner text that corresponds to one of the following keys on the keyboard: Q, W, E, A, S, D, Z, X, C. The drum pads MUST be in this order.\n\nUser Story #4: Within each .drum-pad, there should be an HTML5 audio element which has a src attribute pointing to an audio clip, a class name of clip, and an id corresponding to the inner text of its parent .drum-pad (e.g. id=\"Q\", id=\"W\", id=\"E\" etc.).\n\nUser Story #5: When I click on a .drum-pad element, the audio clip contained in its child audio element should be triggered.\n\nUser Story #6: When I press the trigger key associated with each .drum-pad, the audio clip contained in its child audio element should be triggered (e.g. pressing the Q key should trigger the drum pad which contains the string Q, pressing the W key should trigger the drum pad which contains the string W, etc.).\n\nUser Story #7: When a .drum-pad is triggered, a string describing the associated audio clip is displayed as the inner text of the #display element (each string must be unique).\n*/\n\n/*\nLOS 9 SONIDOS CON SU URL\n\nBassDrum(bombo) - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Kicks/61[kb]bass-kickers-2.wav.mp3\nSnare(redoblante) - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Snares/33[kb]909sd.wav.mp3\nHiHatClosed - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/15[kb]chh.wav.mp3\nHiHatOpen - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/36[kb]darkohh.wav.mp3\nCrashCymbal - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Crashes/91[kb]curecrash.wav.mp3\nRideCymbal - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Cymbals/97[kb]curiouscym2.wav.mp3\nHighTom - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/39[kb]hitom.wav.mp3\nMediumTom - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/42[kb]midtom.wav.mp3\nFloorTom(chancha) - https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/90[kb]loetom.wav.mp3\n*/\n\nconst soundBank = [\n{\n    keyCode: 81,\n    keyTrigger: 'Q',\n    desc: 'High-Tom',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/39[kb]hitom.wav.mp3'\n}, {\n    keyCode: 87,\n    keyTrigger: 'W',\n    desc: 'Medium-Tom',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/42[kb]midtom.wav.mp3'\n}, {\n    keyCode: 69,\n    keyTrigger: 'E',\n    desc: 'Crash-Cymbal',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Crashes/91[kb]curecrash.wav.mp3'\n}, {\n    keyCode: 65,\n    keyTrigger: 'A',\n    desc: 'Floor-Tom',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Toms/90[kb]loetom.wav.mp3'\n}, {\n    keyCode: 83,\n    keyTrigger: 'S',\n    desc: 'HighHat-Open',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/36[kb]darkohh.wav.mp3'\n}, {\n    keyCode: 68,\n    keyTrigger: 'D',\n    desc: 'Ride-Cymbal',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Cymbals/97[kb]curiouscym2.wav.mp3'\n}, {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    desc: 'Bass-Drum',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Kicks/61[kb]bass-kickers-2.wav.mp3'\n}, {\n    keyCode: 88,\n    keyTrigger: 'X',\n    desc: 'HighHat-Closed',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/15[kb]chh.wav.mp3'\n}, {\n    keyCode: 67,\n    keyTrigger: 'C',\n    desc: 'Snare',\n    url: 'https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Snares/33[kb]909sd.wav.mp3'\n}];\n\nclass DrumPad extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.audioHandler = React.createRef();\n        this.onDrumPadClick = this.onDrumPadClick.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n    }\n\n    onDrumPadClick() {\n        const text = this.props.padItem.desc.replace(/-/g,\" \");\n        const audio = this.audioHandler.current;\n\n        this.props.updateDisplayText(text);\n        audio.currentTime = 0;\n        audio.play();\n    }\n\n    onKeyDown(e) {\n        if (e.keyCode === this.props.padItem.keyCode){\n            this.onDrumPadClick();\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown);\n    }\n\n    render() {\n        const padItem = this.props.padItem;\n\n        return(\n            <div className=\"drum-pad\" id={padItem.desc} onClick={this.onDrumPadClick} >\n                <audio className=\"clip\" id={padItem.keyTrigger} src={padItem.url} ref={this.audioHandler} />\n                {padItem.keyTrigger}    \n            </div>\n        )\n\n    }\n\n\n}\n\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        //kinda weird but maybe i dont need an additional state since\n        //i didnt implement:\n        //1) multiple sound banks\n        //2) volume control\n        this.state = {\n            displayText: ' '\n        };\n        //maybe not needed\n        this.updateDisplayText = this.updateDisplayText.bind(this);\n    }\n    \n    updateDisplayText(text) {\n        this.setState({\n            displayText: text\n        });\n    }\n\n\n    render(){\n        //some js\n\n        //this will be rendered\n        return(\n            <div className=\"container\" id=\"drum-machine\">\n                <div>\n                    <h1 className=\"title\">Drum Machine</h1>\n                </div>\n                <div className=\"drum-display\" id=\"display\">\n                    <h1>{this.state.displayText}</h1>\n                </div>\n                <div className=\"drum-pads\">\n                    {\n                        soundBank.map((item,idx) => {\n                            return <DrumPad\n                                key={idx}\n                                padItem={item}\n                                updateDisplayText={this.updateDisplayText}\n                            />                          \n                        })  \n                    }\n                </div>\n                <div id=\"footer\" className=\"footer\">by <a className=\"link\" \n                href=\"https://codepen.io/villagrat/\">&#64;villagrat</a>\n                </div>\n            </div>\n        );\n\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}